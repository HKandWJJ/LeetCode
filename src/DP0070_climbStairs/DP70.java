package DP0070_climbStairs;

/**
 * 爬楼梯：每次可以爬1或2层楼梯，问有多少种不同的方法可以爬到楼顶
 * ********************************************************
 * 思路总结：
 * 1. 爬到第n层楼梯的方法数量，等于爬到第n-1层楼梯的方法数量和爬到第n-2层楼梯的方法数量之和
 * 2. 爬到第1层楼梯的方法数量为1，爬到第2层楼梯的方法数量为2
 * ********************************************************
 * 时间复杂度：O(n)
 * 空间复杂度：O(1)
 */
class Solution {
    public int climbStairs(int n) {
        int p = 0, q = 0, r = 1;
        for(int i = 1; i <= n; ++i){
            p = q;
            q = r;
            r = p + q;
        }
        return r;
    }
}
